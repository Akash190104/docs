"use strict";(self.webpackChunkdevops_extensions_docs=self.webpackChunkdevops_extensions_docs||[]).push([[611],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=m(n),c=l,k=d["".concat(o,".").concat(c)]||d[c]||p[c]||r;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,s[1]=i;for(var m=2;m<r;m++)s[m]=n[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7585:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var a=n(7462),l=(n(7294),n(3905));const r={},s="Pull Request Comments",i={unversionedId:"extensions/pull-request-utils/tasks/pull-request-comments",id:"extensions/pull-request-utils/tasks/pull-request-comments",title:"Pull Request Comments",description:"Add comments to a pull request",source:"@site/docs/extensions/pull-request-utils/tasks/pull-request-comments.md",sourceDirName:"extensions/pull-request-utils/tasks",slug:"/extensions/pull-request-utils/tasks/pull-request-comments",permalink:"/docs/extensions/pull-request-utils/tasks/pull-request-comments",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"pullRequestUtils",previous:{title:"Changelog",permalink:"/docs/extensions/pull-request-utils/changelog"},next:{title:"Pull Request Description",permalink:"/docs/extensions/pull-request-utils/tasks/pull-request-description"}},o={},m=[{value:"YAML Snippet",id:"yaml-snippet",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Examples",id:"examples",level:2},{value:"Posting a comment",id:"posting-a-comment",level:2},{value:"Posting a comment with markdown",id:"posting-a-comment-with-markdown",level:2},{value:"Posting multiple comments",id:"posting-multiple-comments",level:2}],u={toc:m};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"pull-request-comments"},"Pull Request Comments"),(0,l.kt)("p",null,"Add comments to a pull request"),(0,l.kt)("h2",{id:"yaml-snippet"},"YAML Snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- task: PullRequestComments@0\n  inputs:\n    action: create #Action to perform\n    skipIfCommentExists: true #If the comment exists on the pull request, do not post it again\n    commentId: #Is used to uniqely identify the comment when using the same task multiple times in the same pipeline\n    status: Active #Post the comment with a given status\n    content: #The content of the comment. For Markdown syntax, see [Syntax guidance for basic Markdown usage](http://go.microsoft.com/fwlink/?LinkId=823918)\n    useDefined: false #If set, overrides the value from `System.PullRequest.PullRequestId`\n    pullRequestId: $(System.PullRequest.PullRequestId) #If no id is given, the value from `System.PullRequest.PullRequestId` is taken. If a value is given, this overrides the value from `System.PullRequest.PullRequestId`\n    type: Text #The type of comment. `Text` represents a regular user comment while `System` indicates a system message\n\n")),(0,l.kt)("h2",{id:"arguments"},"Arguments"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"action")," ",(0,l.kt)("br",null),"Action"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," Action to perform ",(0,l.kt)("br",null)," Options: ",(0,l.kt)("inlineCode",{parentName:"td"},"create"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"createOrUpdate"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"update")," ",(0,l.kt)("br",null)," Default value: ",(0,l.kt)("inlineCode",{parentName:"td"},"create"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"skipIfCommentExists")," ",(0,l.kt)("br",null),"Do not post comment if it exists"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," If the comment exists on the pull request, do not post it again ",(0,l.kt)("br",null)," Default value: ",(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"commentId")," ",(0,l.kt)("br",null),"Comment Id"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," Is used to uniqely identify the comment when using the same task multiple times in the same pipeline ",(0,l.kt)("br",null))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"status")," ",(0,l.kt)("br",null),"Comment Status"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," Post the comment with a given status ",(0,l.kt)("br",null)," Options: ",(0,l.kt)("inlineCode",{parentName:"td"},"Active"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Fixed"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"WontFix"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Closed"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Pending")," ",(0,l.kt)("br",null)," Default value: ",(0,l.kt)("inlineCode",{parentName:"td"},"Active"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"content")," ",(0,l.kt)("br",null),"Comment Content"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Required)")," The content of the comment. For Markdown syntax, see ",(0,l.kt)("a",{parentName:"td",href:"http://go.microsoft.com/fwlink/?LinkId=823918"},"Syntax guidance for basic Markdown usage")," ",(0,l.kt)("br",null))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"useDefined")," ",(0,l.kt)("br",null),"Use defined id"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," If set, overrides the value from ",(0,l.kt)("inlineCode",{parentName:"td"},"System.PullRequest.PullRequestId")," ",(0,l.kt)("br",null))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"pullRequestId")," ",(0,l.kt)("br",null),"Pull Request Id"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," If no id is given, the value from ",(0,l.kt)("inlineCode",{parentName:"td"},"System.PullRequest.PullRequestId")," is taken. If a value is given, this overrides the value from ",(0,l.kt)("inlineCode",{parentName:"td"},"System.PullRequest.PullRequestId")," ",(0,l.kt)("br",null)," Default value: ",(0,l.kt)("inlineCode",{parentName:"td"},"$(System.PullRequest.PullRequestId)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"type")," ",(0,l.kt)("br",null),"Comment Type"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"(Optional)")," The type of comment. ",(0,l.kt)("inlineCode",{parentName:"td"},"Text")," represents a regular user comment while ",(0,l.kt)("inlineCode",{parentName:"td"},"System")," indicates a system message ",(0,l.kt)("br",null)," Options: ",(0,l.kt)("inlineCode",{parentName:"td"},"Text"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"System")," ",(0,l.kt)("br",null)," Default value: ",(0,l.kt)("inlineCode",{parentName:"td"},"Text"))))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h2",{id:"posting-a-comment"},"Posting a comment"),(0,l.kt)("p",null,"Given the following pipeline configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"steps:\n  - task: PullRequestComments@0\n    displayName: 'Post a pull request comment'\n    inputs:\n      content: 'This is a comment posted from pipeline $(Build.Repository.Name)'\n      status: 'Pending'\n      action: 'create'\n")),(0,l.kt)("p",null,"after a run against a pull request it will post the comment:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"simple-pr-comment.png",src:n(2994).Z,width:"548",height:"158"})),(0,l.kt)("h2",{id:"posting-a-comment-with-markdown"},"Posting a comment with markdown"),(0,l.kt)("p",null,"Given the following pipeline configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"steps:\n  - task: PullRequestComments@0\n    inputs:\n      status: 'Closed'\n      action: 'create'\n      content: |\n        #Title\n\n        This is a pull request from `$(Build.DefinitionName)`\n\n        | Id  | Name    |\n        | --- | ------- |\n        | 1   | Content |\n")),(0,l.kt)("p",null,"after a run against a pull request it will post the comment:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"markdown-pr-comment.png",src:n(6263).Z,width:"578",height:"278"})),(0,l.kt)("h2",{id:"posting-multiple-comments"},"Posting multiple comments"),(0,l.kt)("p",null,"When posting multiple comments, ensure ",(0,l.kt)("inlineCode",{parentName:"p"},"commentId")," is set to a unique value for each task."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"steps:\n  - task: PullRequestComments@0\n    displayName: 'Post regular comment'\n    inputs:\n      action: 'createOrUpdate'\n      status: 'Closed'\n      commentId: 'regular_comment'\n      content: |\n        #Title\n\n        This is a pull request from `$(Build.DefinitionName)`\n\n        | Id  | Name    |\n        | --- | ------- |\n        | 1   | Content |\n  - task: PullRequestComments@0\n    displayName: 'Post markdown comment'\n    inputs:\n      action: 'createOrUpdate'\n      status: 'Pending'\n      commentId: 'markdown_comment'\n      content: 'This is a comment posted from pipeline $(Build.Repository.Name)'\n")))}p.isMDXComponent=!0},6263:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/markdown-pr-comment-608f02859d6a8c4dddc63b2f4b4122e4.png"},2994:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/simple-pr-comment-a5d14b9d519821d188312d3d7d41e945.png"}}]);